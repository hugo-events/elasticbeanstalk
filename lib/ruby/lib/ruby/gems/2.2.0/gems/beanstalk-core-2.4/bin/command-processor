#!/opt/elasticbeanstalk/lib/ruby/bin/ruby

#==============================================================================
# Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Amazon Software License (the "License"). You may not use
# this file except in compliance with the License. A copy of the License is
# located at
#
#       https://aws.amazon.com/asl/
#
# or in the "license" file accompanying this file. This file is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or
# implied. See the License for the specific language governing permissions
# and limitations under the License.
#==============================================================================

require 'optparse'
require 'ostruct'
require 'elasticbeanstalk/command-processor'
require 'elasticbeanstalk/exceptions'
require 'elasticbeanstalk/command-result'
require 'elasticbeanstalk/serialization/command_request'
require 'elasticbeanstalk/serialization/command_response'

include ElasticBeanstalk

File.umask(022)

options = OpenStruct.new
options.error_exit = false

opts = OptionParser.new do |opts|
    opts.on("-e", "--error_exit", "Exit with error code 1 when Command fails.") do |error_exit|
        options.error_exit = true
    end
end

begin
    opts.parse!
    cmd_data_str = ENV['CMD_DATA']
    raise BeanstalkRuntimeError, %[CMD_DATA not provided!] unless cmd_data_str

    cmd_req = CommandRequest.from_env(logger: CommandProcessor.logger)
    cmd_result = CommandProcessor.new.execute!(cmd_req)
    print CommandResponse.generate(cmd_result: cmd_result, api_version: cmd_req.api_version)
    if options.error_exit && cmd_result.status != CommandResult::SUCCESS
        exit 1
    end
rescue Exception => e
    # Log final words before die
    CommandProcessor.logger.error(ElasticBeanstalk.format_exception(e))
    raise e
ensure
    CommandProcessor.logger.close
    Activity.logfile.close unless Activity.logfile.closed?
end

